    - name: Query node for leader information
      shell: "microk8s kubectl get nodes -o=jsonpath='{.items[?(@.metadata.annotations[\"microk8s.io/role\"]==\"leader\")].metadata.name}'"
      register: leader_result
      ignore_errors: yes

    - name: Collect leader information
      set_fact:
        leader_node: "{{ leader_result.stdout }}"
      when: leader_result.stdout | length > 0

    - name: Debug leader node information
      debug:
        msg: "Leader node found: {{ leader_node }}"

    - name: Set the leader node as designated host
      set_fact:
        designated_host: "{{ leader_node }}"
      when: leader_node is defined
      run_once: true

    - name: Fail if no designated host found
      fail:
        msg: "No designated host could be determined from the HA group"
      when: designated_host is not defined

    - name: Debug designated host
      debug:
        msg: "Designated host (leader node) is {{ designated_host }}"
      when: designated_host is defined


microk8s kubectl get nodes -o=jsonpath='{range .items[*]}{.metadata.name} {.metadata.annotations}{"\n"}{end}'
"microk8s.kubectl get nodes -o json | jq -r '.items[] | select(.metadata.annotations[\"microk8s.io/role\"] == \"leader\") | .metadata.name'"
microk8s.kubectl -n kube-system get configmap dqlite -o jsonpath='{.data.cluster}'
microk8s.kubectl get nodes -o json | jq '.items[] | {name: .metadata.name, annotations: .metadata.annotations, labels: .metadata.labels}'

